{"version":3,"sources":["index.ts"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["import * as fs from 'fs';\nimport * as path from 'path';\nimport {URL, format} from 'url';\n\nimport hjson from 'hjson';\nimport * as minimist from 'minimist';\nimport promise from 'promise-callback';\n\nimport core from 'launch-cloud-core';\n\nimport * as providers from './providers';\n\nimport request from 'request';\n\nimport _ from 'lodash';\n\nconst args = minimist(process.argv.slice(2));\n\nif (args._.length === 0) {\n  console.log('Usage: launch-cloud <path_to_your_cloud_description.json>');\n  process.exit(1);\n}\n\nconst proxies = {\n  // dockerHubApiRoot: 'http://localhost:3408',\n  // discoveryEtcdApiRoot: 'http://localhost:3409'\n  dockerHubApiRoot: 'http://104.154.35.244',\n  discoveryEtcdApiRoot: 'http://23.236.50.60',\n  githubRawRoot: 'https://raw.githubusercontent.com'\n};\n\nconst log = (...args) => console.log(...args),\n      api = core({\n        providers,\n        providerConfigs: {\n          amazon: {},\n          digitalocean: {},\n          google: {},\n          microsoft: {},\n          rackspace: {}\n        },\n        log,\n        request,\n        proxies: {}\n      });\n\n\nconst cloudFile = args._[0];\n\nlog('Launching', cloudFile, '...');\nreadCloudFile(cloudFile)\n  .then(parseCloudFile)\n  .then(cloud => {\n    // maybe only do this for the providers being used\n    _.each(providers, provider => {\n      _.each(provider.credentialSchema, (schema, name) => {\n        provider.credentials[name] = process.env[schema.environmentVariable];\n      });\n    });\n    return cloud;\n  })\n  .then(cloud => api.launch(cloud))\n  .catch(e => console.log('Launch Failed', e.stack));\n\nfunction readCloudFile(cloudFile) {\n  console.log('Reading cloudFile');\n  const filePath = path.resolve(cloudFile);\n\n  return promise(fs.readFile, filePath)\n          .then(\n            contents => {console.log(contents); return contents;},\n            result => handleNonLocalFile(result.error, cloudFile));\n\n  function handleNonLocalFile(error, cloudFile) {\n    if (error.code === 'ENOENT') {\n      const parsed = new URL(cloudFile);\n\n      if (!parsed.host) {\n        parsed.protocol = 'https';\n        parsed.host = 'raw.githubusercontent.com';\n        parsed.pathname = cloudFile.endsWith('json') ? cloudFile : `${cloudFile}/master/cloud.hjson`;\n      }\n\n      const requestUrl = format(parsed);\n      // const requestUrl = parsed.format();\n\n      console.log(`cloudFile not found locally. Checking Github...${requestUrl}`);\n\n      return promise(request, requestUrl)\n              .then(result => {return result[1]; });\n    }\n  }\n}\n\nfunction parseCloudFile(contents) {\n  console.log('Parsing cloudFile');\n  return new Promise((resolve, reject) => {\n    try {\n      resolve(hjson.parse(contents.toString()));\n    }\n    catch (ex) { reject(ex); }\n  });\n}"]}